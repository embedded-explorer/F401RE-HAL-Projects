#include <string.h>
#include <stdio.h>
#include "main.h"

void UART2_Init(void);
void Error_handler(void);
void SystemClockConfig(void);

UART_HandleTypeDef huart2;

char message[100];

int main(void)
{
	HAL_Init();

	SystemClockConfig();

	UART2_Init();
/*
	memset(message, 0, sizeof(message));
	sprintf(message, "SYSCLK = %ldHz\n\r", HAL_RCC_GetSysClockFreq());
	HAL_UART_Transmit(&huart2, (uint8_t*)message, strlen(message), HAL_MAX_DELAY);

	memset(message, 0, sizeof(message));
	sprintf(message, "HCLK = %ldHz\n\r", HAL_RCC_GetHCLKFreq());
	HAL_UART_Transmit(&huart2, (uint8_t*)message, strlen(message), HAL_MAX_DELAY);

	memset(message, 0, sizeof(message));
	sprintf(message, "PCLK1 = %ldHz\n\r", HAL_RCC_GetPCLK1Freq());
	HAL_UART_Transmit(&huart2, (uint8_t*)message, strlen(message), HAL_MAX_DELAY);

	memset(message, 0, sizeof(message));
	sprintf(message, "PCLK2 = %ldHz\n\r", HAL_RCC_GetPCLK2Freq());
	HAL_UART_Transmit(&huart2, (uint8_t*)message, strlen(message), HAL_MAX_DELAY);
*/
	while(1);

	return 0;
}

// High Level Peripheral Initialization
void UART2_Init(void)
{
	huart2.Instance = USART2;
	huart2.Init.BaudRate = 115200;
	huart2.Init.WordLength = UART_WORDLENGTH_8B;
	huart2.Init.StopBits = UART_STOPBITS_1;
	huart2.Init.Parity = UART_PARITY_NONE;
	huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
	huart2.Init.Mode = UART_MODE_TX_RX;

	if(HAL_UART_Init(&huart2) != HAL_OK)
	{
		//  There is a problem
		Error_handler();
	}
}

void Error_handler(void)
{
	while(1);
}

void SystemClockConfig(void)
{
	RCC_OscInitTypeDef osc_init;
	RCC_ClkInitTypeDef clk_init;

	osc_init.OscillatorType = RCC_OSCILLATORTYPE_HSI;
	osc_init.HSIState = RCC_HSI_ON;
	osc_init.HSICalibrationValue = 0x00;
	osc_init.PLL.PLLM = 16;
	osc_init.PLL.PLLN = 100;
	osc_init.PLL.PLLP = RCC_PLLDIV_2;
	HAL_RCC_OscConfig(osc_init);


}
